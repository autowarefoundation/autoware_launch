<?xml version="1.0"?>
<launch>
  <arg name="use_sim_time" default="false"/>
  <arg name="vehicle_model" default="sample_vehicle"/>

  <!-- Global parameters -->
  <group scoped="false">
    <include file="$(find-pkg-share autoware_global_parameter_loader)/launch/global_params.launch.py">
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
    </include>
  </group>

  <arg name="use_empty_dynamic_object_publisher" default="false" description="if true, /perception/object_recognition/objects topic has an empty DynamicObjectArray"/>
  <arg name="use_traffic_light_recognition" default="true" description="use traffic light recognition module, if false, traffic light recognition module will not be launched"/>

  <arg name="use_low_height_cropbox" default="false" description="use low height crop filter in clustering"/>
  <arg name="use_vector_map" default="true" description="use vector map in prediction"/>
  <arg name="use_pointcloud_map" default="true" description="use pointcloud map in detection"/>
  <arg name="use_irregular_object_detector" default="true" description="enable pipeline for small unknown object detection"/>
  <arg name="use_low_intensity_cluster_filter" default="true" description="launch low_intensity_cluster_filter in clustering"/>
  <arg name="use_image_segmentation_based_filter" default="false" description="launch image_segmentation_based_filter in clustering"/>
  <arg name="use_perception_online_evaluator" default="false" description="launch perception online evaluator"/>
  <arg name="use_detection_by_tracker" default="true" description="launch detection_by_tracker function"/>
  <arg name="use_radar_tracking_fusion" default="true" description="if true, radar objects are merged in tracking module. Otherwise, radar objects are merged in detection module."/>
  <arg name="use_object_filter" default="true" description="launch object filter to filter-out detected object"/>
  <arg name="use_obstacle_segmentation_single_frame_filter" default="false" description="use single frame filter at the ground segmentation"/>
  <arg name="use_obstacle_segmentation_time_series_filter" default="true" description="use time series filter at the ground segmentation"/>
  <arg name="segmentation_pointcloud_fusion_camera_ids" default="[0,2,4]" description="list of camera ids used for segmentation_pointcloud_fusion node, mainly using front camera"/>
  <arg name="use_multi_channel_tracker_merger" default="false" description="if true, multi channel tracker merger is used. Otherwise, merged object is used."/>

  <arg name="occupancy_grid_map_method" default="pointcloud_based" description="options: pointcloud_based, laserscan_based, multi_lidar_pointcloud_based"/>
  <arg name="occupancy_grid_map_updater" default="binary_bayes_filter" description="options: binary_bayes_filter"/>
  <arg name="detected_objects_filter_method" default="lanelet_filter" description="options: lanelet_filter, position_filter"/>
  <arg name="detected_objects_validation_method" default="obstacle_pointcloud" description="options: obstacle_pointcloud, occupancy_grid (must be used with laserscan_based_occupancy_grid_map)"/>
  <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>
  <arg name="lidar_detection_model" default="centerpoint" description="If the model name is not declared, the default model in perception.launch.xml will be used"/>

  <arg name="traffic_light_recognition/camera_namespaces" default="[camera6, camera7]" description="choose camera which use for traffic light recognition"/>
  <arg name="traffic_light_recognition/use_high_accuracy_detection" default="true" description="select whether to use high accuracy detector for traffic light recognition"/>
  <arg
    name="traffic_light_recognition/high_accuracy_detection_type"
    default="fine_detection"
    description="select high accuracy detector type for traffic light recognition: fine_detection or whole_image_detection"
  />

  <include file="$(find-pkg-share tier4_perception_launch)/launch/perception.launch.xml">
    <arg name="data_path" value="$(var data_path)"/>
    <!-- general options to switch launch function/module -->
    <arg name="mode" value="$(var perception_mode)"/>
    <arg name="lidar_detection_model" value="$(var lidar_detection_model)"/>
    <arg name="use_multi_channel_tracker_merger" value="$(var use_multi_channel_tracker_merger)"/>
    <arg name="vehicle_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>

    <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    <arg name="occupancy_grid_map_method" value="$(var occupancy_grid_map_method)_occupancy_grid_map"/>
    <arg name="occupancy_grid_map_updater" value="$(var occupancy_grid_map_updater)"/>

    <arg name="use_empty_dynamic_object_publisher" value="$(var use_empty_dynamic_object_publisher)"/>
    <arg name="use_low_height_cropbox" value="$(var use_low_height_cropbox)"/>
    <arg name="use_vector_map" value="$(var use_vector_map)"/>
    <arg name="use_pointcloud_map" value="$(var use_pointcloud_map)"/>
    <arg name="use_irregular_object_detector" value="$(var use_irregular_object_detector)"/>
    <arg name="use_low_intensity_cluster_filter" value="$(var use_low_intensity_cluster_filter)"/>
    <arg name="use_image_segmentation_based_filter" value="$(var use_image_segmentation_based_filter)"/>
    <arg name="use_perception_online_evaluator" value="$(var use_perception_online_evaluator)"/>
    <arg name="use_detection_by_tracker" value="$(var use_detection_by_tracker)"/>
    <arg name="use_radar_tracking_fusion" value="$(var use_radar_tracking_fusion)"/>
    <arg name="use_object_filter" value="$(var use_object_filter)"/>
    <arg name="objects_filter_method" value="$(var detected_objects_filter_method)"/>
    <arg name="objects_validation_method" value="$(var detected_objects_validation_method)"/>
    <arg name="use_obstacle_segmentation_single_frame_filter" value="$(var use_obstacle_segmentation_single_frame_filter)"/>
    <arg name="use_obstacle_segmentation_time_series_filter" value="$(var use_obstacle_segmentation_time_series_filter)"/>
    <arg name="segmentation_pointcloud_fusion_camera_ids" value="$(var segmentation_pointcloud_fusion_camera_ids)"/>

    <!-- traffic light recognition options to switch launch function/module -->
    <arg name="use_traffic_light_recognition" value="$(var use_traffic_light_recognition)"/>
    <arg name="traffic_light_recognition/fusion_only" value="false"/>
    <arg name="traffic_light_recognition/camera_namespaces" value="$(var traffic_light_recognition/camera_namespaces)"/>
    <arg name="traffic_light_recognition/use_high_accuracy_detection" value="$(var traffic_light_recognition/use_high_accuracy_detection)"/>
    <arg name="traffic_light_recognition/high_accuracy_detection_type" value="$(var traffic_light_recognition/high_accuracy_detection_type)"/>

    <!-- object recognition parameters -->
    <arg
      name="object_recognition_detection_euclidean_cluster_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/euclidean_cluster.param.yaml"
    />
    <arg name="object_recognition_detection_outlier_param_path" value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/outlier.param.yaml"/>
    <arg
      name="object_recognition_detection_voxel_grid_based_euclidean_cluster_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/clustering/voxel_grid_based_euclidean_cluster.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_lanelet_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/object_lanelet_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_position_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/object_position_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_pointcloud_map_filter_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/pointcloud_filter/pointcloud_map_filter.param.yaml"
    />
    <arg
      name="object_recognition_detection_fusion_sync_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/fusion_common.param.yaml"
    />
    <arg
      name="object_recognition_detection_roi_cluster_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/roi_cluster_fusion.param.yaml"
    />
    <arg
      name="object_recognition_detection_irregular_object_detector_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/irregular_object_detection/irregular_object_detector.param.yaml"
    />
    <arg
      name="object_recognition_detection_roi_detected_object_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/roi_detected_object_fusion.param.yaml"
    />
    <arg
      name="object_recognition_detection_pointpainting_fusion_common_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/pointpainting_common.param.yaml"
    />
    <arg
      name="object_recognition_detection_obstacle_pointcloud_based_validator_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/detected_object_validation/obstacle_pointcloud_based_validator.param.yaml"
    />
    <arg
      name="object_recognition_prediction_map_based_prediction_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/prediction/map_based_prediction.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_merger_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_merger/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_merger_distance_threshold_list_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_merger/overlapped_judge.param.yaml"
    />
    <arg
      name="object_recognition_detection_detection_by_tracker_param"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/detection_by_tracker/detection_by_tracker.param.yaml"
    />
    <arg
      name="object_recognition_detection_radar_lanelet_filtering_range_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_filter/radar_lanelet_filter.param.yaml"
    />
    <arg name="object_recognition_detection_lidar_model_param_path" value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/lidar_model"/>
    <arg
      name="object_recognition_detection_object_velocity_splitter_radar_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_velocity_splitter/object_velocity_splitter_radar.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_velocity_splitter_radar_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_velocity_splitter/object_velocity_splitter_radar_fusion.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_range_splitter_radar_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_range_splitter/object_range_splitter_radar.param.yaml"
    />
    <arg
      name="object_recognition_detection_object_range_splitter_radar_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/detection/object_range_splitter/object_range_splitter_radar_fusion.param.yaml"
    />
    <arg
      name="object_recognition_tracking_multi_object_tracker_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/multi_object_tracker/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_tracking_multi_object_tracker_input_channels_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/multi_object_tracker/input_channels.param.yaml"
    />
    <arg
      name="object_recognition_tracking_multi_object_tracker_node_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/multi_object_tracker/multi_object_tracker_node.param.yaml"
    />
    <arg
      name="object_recognition_tracking_radar_object_tracker_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_tracking_radar_object_tracker_tracking_setting_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker/default_tracker.param.yaml"
    />
    <arg
      name="object_recognition_tracking_radar_object_tracker_node_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/radar_object_tracker/radar_object_tracker.param.yaml"
    />
    <arg
      name="object_recognition_tracking_object_merger_data_association_matrix_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/tracking_object_merger/data_association_matrix.param.yaml"
    />
    <arg
      name="object_recognition_tracking_object_merger_node_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/object_recognition/tracking/tracking_object_merger/decorative_tracker_merger.param.yaml"
    />

    <!-- obstacle segmentation parameters -->
    <arg
      name="obstacle_segmentation_ground_segmentation_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/obstacle_segmentation/ground_segmentation/ground_segmentation.param.yaml"
    />
    <arg
      name="obstacle_segmentation_ground_segmentation_elevation_map_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/obstacle_segmentation/ground_segmentation/elevation_map_parameters.yaml"
    />

    <!-- occupancy grid map parameters -->
    <arg name="occupancy_grid_map_param_path" value="$(find-pkg-share autoware_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_method).param.yaml"/>
    <arg name="occupancy_grid_map_updater_param_path" value="$(find-pkg-share autoware_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_updater)_updater.param.yaml"/>

    <!-- traffic light recognition parameters -->
    <arg
      name="each_traffic_light_map_based_detector_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/traffic_light_map_based_detector/TRAFFIC_LIGHT_RECOGNITION_CAMERA_NAMESPACE_traffic_light_map_based_detector.param.yaml"
    />
    <arg
      name="traffic_light_fine_detector_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/traffic_light_fine_detector/traffic_light_fine_detector.param.yaml"
    />
    <arg name="yolox_traffic_light_detector_param_path" value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/tensorrt_yolox/yolox_traffic_light_detector.param.yaml"/>
    <arg
      name="car_traffic_light_classifier_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/traffic_light_classifier/car_traffic_light_classifier.param.yaml"
    />
    <arg
      name="pedestrian_traffic_light_classifier_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/traffic_light_classifier/pedestrian_traffic_light_classifier.param.yaml"
    />
    <arg
      name="traffic_light_roi_visualizer_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/traffic_light_visualization/traffic_light_roi_visualizer.param.yaml"
    />
    <arg
      name="traffic_light_occlusion_predictor_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/traffic_light_occlusion_predictor/traffic_light_occlusion_predictor.param.yaml"
    />
    <arg
      name="traffic_light_multi_camera_fusion_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/traffic_light_multi_camera_fusion/traffic_light_multi_camera_fusion.param.yaml"
    />
    <arg name="traffic_light_arbiter_param_path" value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/traffic_light_arbiter/traffic_light_arbiter.param.yaml"/>
    <arg
      name="crosswalk_traffic_light_estimator_param_path"
      value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_recognition/crosswalk_traffic_light_estimator/crosswalk_traffic_light_estimator.param.yaml"
    />
    <arg name="traffic_light_recognition/whole_image_detection/model_path" value="$(var data_path)/tensorrt_yolox/yolox_s_car_ped_tl_detector_960_960_batch_1.onnx"/>
    <arg name="traffic_light_recognition/whole_image_detection/label_path" value="$(var data_path)/tensorrt_yolox/car_ped_tl_detector_labels.txt"/>
    <arg name="traffic_light_recognition/fine_detection/model_path" value="$(var data_path)/traffic_light_fine_detector/tlr_car_ped_yolox_s_batch_6.onnx"/>
    <arg name="traffic_light_recognition/fine_detection/label_path" value="$(var data_path)/traffic_light_fine_detector/tlr_labels.txt"/>
    <arg name="traffic_light_recognition/classification/car/model_path" value="$(var data_path)/traffic_light_classifier/traffic_light_classifier_mobilenetv2_batch_6.onnx"/>
    <arg name="traffic_light_recognition/classification/car/label_path" value="$(var data_path)/traffic_light_classifier/lamp_labels.txt"/>
    <arg name="traffic_light_recognition/classification/pedestrian/model_path" value="$(var data_path)/traffic_light_classifier/ped_traffic_light_classifier_mobilenetv2_batch_6.onnx"/>
    <arg name="traffic_light_recognition/classification/pedestrian/label_path" value="$(var data_path)/traffic_light_classifier/lamp_labels_ped.txt"/>
  </include>
</launch>
