<?xml version="1.0"?>
<launch>
  <arg name="input/pointcloud" default="sensing/lidar/concatenated/pointcloud"/>
  <arg name="output/objects" default="objects"/>
  <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>
  <arg name="model_name" default="centerpoint" description="options: `centerpoint` or `centerpoint_tiny`"/>
  <!-- This is where we put the lidar_centerpoint models  -->
  <!-- <arg name="model_path" default="$(find-pkg-share autoware_launch)/launch/object_recognition/detection/detector/model"/> -->
  <arg name="model_path" default="/workspace/src/launcher/autoware_launch/autoware_launch/launch/object_recognition/detection/detector/model"/>
  <arg name="model_param_path" default="$(find-pkg-share autoware_lidar_centerpoint)/config/$(var model_name).param.yaml"/>
  <arg name="ml_package_param_path" default="$(var model_path)/$(var model_name)_ml_package.param.yaml"/>
  <arg name="class_remapper_param_path" default="$(var model_path)/detection_class_remapper.param.yaml"/>
  <arg name="build_only" default="false" description="shutdown node after TensorRT engine file is built"/>
  <arg name="log_level" default="info"/>
  <arg name="use_pointcloud_container" default="false" description="use pointcloud_container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container" description="pointcloud_container name"/>
  
  <!-- Add the necessary static transform publishers -->
  <node pkg="tf2_ros" exec="static_transform_publisher" name="map_to_base_link"
        args="0 0 0 0 0 0 map base_link"
        output="screen"/>
  <!-- publishing static transform from base_link to lidar_ouster_top -->
  <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_lidar"
        args="0 0 1.78 0 0 0 base_link lidar_ouster_top"
        output="screen"/>
  
  <group if="$(var use_pointcloud_container)">
    <load_composable_node target="$(var pointcloud_container_name)">
      <composable_node pkg="autoware_lidar_centerpoint" plugin="autoware::lidar_centerpoint::LidarCenterPointNode" name="lidar_centerpoint">
        <remap from="~/input/pointcloud" to="$(var input/pointcloud)"/>
        <remap from="~/output/objects" to="$(var output/objects)"/>
        <param from="$(var model_param_path)" allow_substs="true"/>
        <param from="$(var ml_package_param_path)" allow_substs="true"/>
        <param from="$(var class_remapper_param_path)"/>

        <!-- This parameter shall NOT be included in param file. See also: https://github.com/autowarefoundation/autoware_universe/pull/6167 -->
        <param name="build_only" value="$(var build_only)"/>
      </composable_node>
    </load_composable_node>
  </group>
  <group unless="$(var use_pointcloud_container)">
    <node pkg="autoware_lidar_centerpoint" exec="autoware_lidar_centerpoint_node" name="lidar_centerpoint" output="screen">
      <remap from="~/input/pointcloud" to="$(var input/pointcloud)"/>
      <remap from="~/output/objects" to="$(var output/objects)"/>
      <param from="$(var model_param_path)" allow_substs="true"/>
      <param from="$(var ml_package_param_path)" allow_substs="true"/>
      <param from="$(var class_remapper_param_path)"/>

      <!-- This parameter shall NOT be included in param file. See also: https://github.com/autowarefoundation/autoware_universe/pull/6167 -->
      <param name="build_only" value="$(var build_only)"/>
    </node>
  </group>
</launch>