/**:
  ros__parameters:
    option:
      enable_skip_optimization: false                              # skip elastic band and model predictive trajectory
      enable_reset_prev_optimization: false                        # If true, optimization has no fix constraint to the previous result.
      enable_outside_drivable_area_stop: false                     # stop if the ego's trajectory footprint is outside the drivable area
      use_footprint_polygon_for_outside_drivable_area_check: false # If false, only the footprint's corner points are considered.

      debug:
        # flag to publish
        enable_pub_debug_marker: false           # publish debug marker
        enable_pub_extra_debug_marker: false    # publish extra debug marker

        # flag to show
        enable_debug_info: false
        enable_calculation_time_info: false

    common:
      # output
      output_delta_arc_length: 0.5     #  delta arc length for output trajectory [m]
      output_backward_traj_length: 5.0  # backward length for backward trajectory from base_link [m]

      vehicle_stop_margin_outside_drivable_area: 0.0 # vehicle stop margin to let the vehicle stop before the calculated stop point if it is calculated outside the drivable area [m] .
                                                     # This margin will be realized with delta_arc_length_for_mpt_points m precision.

    # replanning & trimming trajectory param outside algorithm
    replan:
      max_path_shape_around_ego_lat_dist: 2.0  # threshold of path shape change around ego [m]
      max_path_shape_forward_lon_dist: 100.0   # forward point to check lateral distance difference [m]
      max_path_shape_forward_lat_dist: 0.1     # threshold of path shape change around forward point [m]
      max_ego_moving_dist: 5.0                 # threshold of ego's moving distance for replan [m]
      # make max_goal_moving_dist long to keep start point fixed for pull over
      max_goal_moving_dist: 15.0               # threshold of goal's moving distance for replan [m]
      max_delta_time_sec: 0.0                  # threshold of delta time for replan [second]

    # mpt param
    mpt:
      option:
        # TODO(murooka) enable the following. Currently enabling the flag makes QP so heavy
        steer_limit_constraint: false
        visualize_sampling_num: 1
        enable_manual_warm_start: false
        enable_warm_start: false
        enable_optimization_validation: false

      common:
        num_points: 100        # number of points for optimization [-]
        delta_arc_length: 1.0  # delta arc length for optimization [m]

      # kinematics:
        # If this parameter is commented out, the parameter is set as below by default.
        # The logic could be `optimization_center_offset = vehicle_info.wheelbase * 0.8`
        # The 0.8 scale is adopted as it performed the best.
        # optimization_center_offset: 2.3 # optimization center offset from base link

      clearance:  # clearance(distance) between vehicle and roads/objects when generating trajectory
        # if collision_free_constraints.option.hard_constraint is true
        hard_clearance_from_road: 0.0 # clearance from road boundary[m]
        # if collision_free_constraints.option.soft_constraint is true
        soft_clearance_from_road: 0.1 # clearance from road boundary[m]

      # weight parameter for optimization
      weight:
        # collision free
        soft_collision_free_weight: 1.0        # soft weight for lateral error around the middle point

        # tracking error
        lat_error_weight: 1.0       # weight for lateral error
        yaw_error_weight: 0.0       # weight for yaw error
        yaw_error_rate_weight: 0.0  # weight for yaw error rate
        steer_input_weight: 1.0     # weight for steering input
        steer_rate_weight: 1.0      # weight for steering rate

        terminal_lat_error_weight: 100.0  # weight for lateral error at terminal point
        terminal_yaw_error_weight: 100.0  # weight for yaw error at terminal point
        goal_lat_error_weight: 1000.0     # weight for lateral error at path end point
        goal_yaw_error_weight: 1000.0     # weight for yaw error at path end point

      # avoidance
      avoidance:
        max_bound_fixing_time: 1.0 # [s]
        max_longitudinal_margin_for_bound_violation: 1.0 # [m]
        max_avoidance_cost: 0.5                          # [m]
        avoidance_cost_margin: 0.0                       # [m]
        avoidance_cost_band_length: 5.0                  # [m]
        avoidance_cost_decrease_rate: 0.05               # decreased cost per point interval
        min_drivable_width: 0.2                          # [m] The vehicle width and this parameter is guaranteed to keep for collision free constraint.

        weight:
          lat_error_weight: 0.0     # weight for lateral error
          yaw_error_weight: 10.0    # weight for yaw error
          steer_input_weight: 100.0 # weight for yaw error

      # collision free constraint for optimization
      collision_free_constraints:
        option:
          l_inf_norm: true
          soft_constraint: true
          hard_constraint: false

        # how to represent footprint as circles
        vehicle_circles:
          method: "fitting_uniform_circle"

          bicycle_model:
            num_for_calculation: 3
            front_radius_ratio: 1.0
            rear_radius_ratio: 1.0

          uniform_circle:
            num: 3
            radius_ratio: 1.0

          fitting_uniform_circle:
            num: 3

      validation: # if enable_optimization_validation is true
        max_lat_error: 5.0 # [m]
        max_yaw_error: 1.046 # [rad]
