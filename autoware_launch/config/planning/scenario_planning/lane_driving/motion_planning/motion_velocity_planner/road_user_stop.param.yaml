/**:
  ros__parameters:
    road_user_stop:
      option:
        suppress_sudden_stop: true

      stop_planning:
        stop_margin: 6.0 # longitudinal margin to obstacle [m]
        terminal_stop_margin: 3.0 # Stop margin at the goal. This value cannot exceed stop margin. [m]
        min_behavior_stop_margin: 3.0 # [m]

        max_negative_velocity: -0.1 # [m/s] maximum velocity of opposing traffic to consider stop planning
        stop_margin_opposing_traffic: 10.0 # Ideal stop-margin from moving opposing obstacle when ego comes to a stop
        effective_deceleration_opposing_traffic: 4.0 # Setting a higher value brings the final stop-margin closer to the ideal value above

        min_on_duration: 0.3  # [s] minimum duration needed before a decision can be triggered
        min_off_duration: 1.0  # [s] minimum duration needed before a decision can be canceled
        update_distance_th: 0.5 # [m] minimum distance threshold to update stop point

        hold_stop_velocity_threshold: 0.01 # The maximum ego velocity to hold stopping [m/s]
        hold_stop_distance_threshold: 0.3 # The ego keeps stopping if the distance to stop changes within the threshold [m]

        stop_on_curve:
          enable_approaching: true
          additional_stop_margin: 3.0 # [m]
          min_stop_margin: 6.0 # [m]

        # Common parameters for all object types
        limit_min_acc: -2.5 # overwrite the deceleration limit, in usually, common_param.yaml/limit.min_acc is referred.
        sudden_object_acc_threshold: -1.0 # If a stop can be achieved by a deceleration smaller than this value, it is not considered as "sudden stop".
        sudden_object_dist_threshold: 1000.0 # If a stop distance is longer than this value, it is not considered as "sudden stop".
        abandon_to_stop: false # If true, the planner gives up to stop when it cannot avoid to run over while maintaining the deceleration limit.

      obstacle_filtering:
        object_type:
          target_types:
            pedestrian: true
            bicycle: true
            motorcycle: false
            unknown: false

        # Lanelet-based filtering
        adjacent_lane_margin: 2.0 # [m]
        
        # Special area filtering
        exclude_crosswalk_users: true
        crosswalk_margin: 1.0 # [m]
        
        # Wrong-way detection
        wrong_way_detection:
          enable: true
          angle_threshold: 150.0 # [deg]
          min_speed_threshold: 0.5 # [m/s]
        
        # Temporal filtering
        min_detection_duration: 0.1 # [s]
        tracked_object_cleanup_threshold: 2.0 # [s] time threshold to remove tracked objects that haven't been detected
        
        # Intersection filtering
        exclude_intersection: false # If true, exclude objects inside intersection lanelets

        polygon_expansion_length: 0.5 # [m] Factor to expand object polygon when object was previously inside detection area

      # Common parameters (these would normally come from common_param.yaml)
      common_param:
        limit_max_accel: 1.0 # [m/s^2] maximum acceleration limit
        limit_min_accel: -2.5 # [m/s^2] minimum acceleration limit