/**:
  ros__parameters:
    # Operation option when invalid trajectory is detected
    #  0: publish the trajectory even if it is invalid
    #  1: stop publishing the trajectory
    #  2: publish the last validated trajectory
    invalid_trajectory_handling_type: 0

    publish_diag: true  # if true, diagnostic msg is published

    # If the number of consecutive invalid trajectory exceeds this threshold, the Diag will be set to ERROR.
    # (For example, threshold = 1 means, even if the trajectory is invalid, Diag will not be ERROR if
    #  the next trajectory is valid.)
    diag_error_count_threshold: 0

    display_on_terminal: true # show error msg on terminal

    thresholds:
      interval: 100.0
      relative_angle: 2.0  # (= 115 degree)
      curvature: 1.0
      lateral_acc: 9.8
      longitudinal_max_acc: 9.8
      longitudinal_min_acc: -9.8
      steering: 1.414
      steering_rate: 10.0
      velocity_deviation: 100.0
      distance_deviation: 100.0
      longitudinal_distance_deviation: 1.0
      nominal_latency: 1.0
      yaw_deviation: 1.5708  # (= 90 degrees)

    parameters:
      # The required trajectory length is calculated as the distance needed
      # to stop from the current speed at this deceleration.
      forward_trajectory_length_acceleration: -3.0

      # An error is raised if the required trajectory length is less than this distance.
      # Setting it to 0 means an error will occur if even slightly exceeding the end of the path,
      # therefore, a certain margin is necessary.
      forward_trajectory_length_margin: 2.0

      # Threshold to filter out objects that are far from the trajectory.
      # Only objects within this distance [m] from their nearest point on the trajectory
      # are considered for collision checking to improve computational efficiency.
      trajectory_to_object_distance_threshold: 30.0

      # Threshold to filter out objects that are far from the ego vehicle.
      # Only objects within this distance [m] from the current ego position
      # are considered for collision checking to improve computational efficiency.
      ego_to_object_distance_threshold: 50.0

      # Time tolerance threshold [s] for collision detection between ego and object trajectories.
      # Collision check is performed only when the time difference between ego and object
      # predicted positions is within this threshold to detect temporal-spatial intersections.
      time_tolerance_threshold: 0.1
