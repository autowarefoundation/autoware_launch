/**:
  ros__parameters:
    # Operation option when invalid trajectory is detected
    #  0: publish the trajectory even if it is invalid
    #  1: stop publishing the trajectory
    #  2: publish the last validated trajectory
    handling_type:
      noncritical: 0
      critical: 2

    publish_diag: true  # if true, diagnostic msg is published

    # If the number of consecutive invalid trajectory exceeds this threshold, the Diag will be set to ERROR.
    # (For example, threshold = 1 means, even if the trajectory is invalid, Diag will not be ERROR if
    #  the next trajectory is valid.)
    diag_error_count_threshold: 0
    display_on_terminal: true # show error msg on terminal

    validity_checks:
      latency:
        enable: true
        threshold: 1.0
        is_critical: false
      interval:
        enable: true
        threshold: 100.0
        is_critical: false
      curvature:
        enable: true
        threshold: 1.0
        is_critical: false
      relative_angle:
        enable: true
        threshold: 2.0 # (= 115 degree)
        is_critical: false
      acceleration:
        enable: true
        lateral_th: 9.8
        longitudinal_max_th: 9.8
        longitudinal_min_th: -9.8
        is_critical: false
      lateral_jerk:
        enable: true
        threshold: 7.0
        is_critical: false
      steering:
        enable: true
        threshold: 1.414
        is_critical: false
      steering_rate:
        enable: true
        threshold: 10.0
        is_critical: false
      deviation:
        enable: true
        velocity_th: 100.0
        distance_th: 100.0
        lon_distance_th: 1.0
        yaw_th: 1.5708 # (= 90 degrees)
        is_critical: false
      forward_trajectory_length:
        enable: true
        acceleration: -3.0
        margin: 2.0
        is_critical: false
